{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","robots","map","user","i","id","name","email","CardList","className","src","alt","SearchBox","searchChange","type","placeholder","onChange","Scroll","children","error","Error","App","useState","searchField","dataSearch","setDataSearch","useEffect","fetch","response","json","users","prev","searchTyping","filterRobotsCardByName","filter","match","RegExp","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qBCLP,SAASQ,EAAT,GAA2B,IAAXC,EAAU,EAAVA,OACrB,OACE,8BACGA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEEC,GAAIJ,EAAOG,GAAGC,GACdC,KAAML,EAAOG,GAAGE,KAChBC,MAAON,EAAOG,GAAGG,OAHZN,EAAOG,GAAGC,SAWpB,IAAMG,EAAW,SAAC,GAAyB,IAAvBF,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOF,EAAS,EAATA,GACtC,OACE,sBAAKI,UAAU,sDAAf,UACE,qBAAKC,IAAG,+BAA0BL,EAA1B,gBAA4CM,IAAI,WACxD,gCACE,6BAAKL,IACL,4BAAIC,WCvBCK,EAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC1B,OACE,qBAAKJ,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVK,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCPLI,G,MAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,IACE,OAAO,qBAAKT,UAAU,UAAf,SAA0BS,IACjC,MAAOC,GACP,MAAM,IAAIC,MAAM,S,MCAL,SAASC,IAAO,IAAD,EACQC,mBAAS,CAC3CrB,OAAQ,GACRsB,YAAa,KAHa,mBACrBC,EADqB,KACTC,EADS,KAM5BC,qBAAU,WACRC,MAAM,8CACHjC,MAAK,SAACkC,GACL,OAAOA,EAASC,UAEjBnC,MAAK,SAACoC,GACLL,GAAc,SAACM,GAAD,mBAAC,eAAeA,GAAhB,IAAsB9B,OAAQ6B,YAG/C,IAMH,IAAME,EAAeR,EAAWD,YAE1BU,EAAyBT,EAAWvB,OAAOiC,QAAO,SAACjC,GAEvD,OADmBA,EAAOK,KACR6B,MAAM,IAAIC,OAAJ,WAAeJ,GAAgB,SAGzD,OAAQR,EAAWvB,OAGjB,sBAAKQ,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWI,aAhBf,YAAqC,IAAXwB,EAAU,EAAVA,OACxBZ,GAAc,SAACM,GAAD,mBAAC,eAAeA,GAAhB,IAAsBR,YAAac,EAAOC,cAgBtD,cAAC,EAAD,UACE,cAACtC,EAAD,CAAMC,OAAQgC,SANlB,oBAAIxB,UAAU,KAAd,yB,YC5BJ8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BpD,M","file":"static/js/main.533ae85c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nexport function Card({ robots }) {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <CardList\n            key={robots[i].id}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport const CardList = ({ name, email, id }) => {\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}test?200x200`} alt=\"robots\" />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport './scroll.css';\nexport const Scroll = ({ children }) => {\n  try {\n    return <div className=\"scrolls\">{children}</div>;\n  } catch (error) {\n    throw new Error('NO');\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Card } from '../components/Card';\nimport { SearchBox } from '../components/SearchBox';\nimport { Scroll } from '../components/Scroll';\nimport './App.css';\n\nexport default function App() {\n  const [dataSearch, setDataSearch] = useState({\n    robots: [],\n    searchField: '',\n  });\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => {\n        return response.json();\n      })\n      .then((users) => {\n        setDataSearch((prev) => ({ ...prev, robots: users }));\n      });\n    // return () => {}; //Cleanup\n  }, []);\n\n  function onSearchChange({ target }) {\n    setDataSearch((prev) => ({ ...prev, searchField: target.value }));\n  }\n\n  const searchTyping = dataSearch.searchField;\n\n  const filterRobotsCardByName = dataSearch.robots.filter((robots) => {\n    const robotsName = robots.name;\n    return robotsName.match(new RegExp(`^${searchTyping}`, 'i')); //dynamic regex\n  });\n\n  return !dataSearch.robots ? (\n    <h1 className=\"tc\">Loading....</h1>\n  ) : (\n    <div className=\"tc\">\n      <h1 className=\"f1\">RoboFriends</h1>\n      <SearchBox searchChange={onSearchChange} />\n      <Scroll>\n        <Card robots={filterRobotsCardByName} />\n      </Scroll>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./containers/App\";\nimport \"tachyons\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}